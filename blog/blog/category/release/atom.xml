<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://docs.pygears.org/</id>
  <title>PyGears - Posts in Release</title>
  <updated>2022-02-11T16:16:41.071576+00:00</updated>
  <link href="https://docs.pygears.org/"/>
  <link href="https://docs.pygears.org/blog/category/release/atom.xml" rel="self"/>
  <generator uri="https://ablog.readthedocs.org/" version="0.10.23">ABlog</generator>
  <entry>
    <id>https://docs.pygears.org/release/v0.1.1.html</id>
    <title>PyGears 0.1.1 released</title>
    <updated>2018-10-07T00:00:00+02:00</updated>
    <author>
      <name>Bogdan Vukobratović</name>
    </author>
    <content type="html">&lt;section id="pygears-0-1-1-released"&gt;

&lt;section id="features"&gt;
&lt;h2&gt;Features&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Add less-then ‘&amp;lt;’ operator&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Offer standardized solution for various logging needs&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Provide option to skip all PyGears framework related frames in PDB debugger&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add &lt;a class="reference external" href="https://github.com/bogdanvuk/pygears/blob/master/pygears/lib/unary.py"&gt;unary&lt;/a&gt; gear to the lib library, which returns the unary representation of a binary number.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Speed-up the PyGears simulator by using asycio.future&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="infrastructure"&gt;
&lt;h2&gt;Infrastructure&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Factor-out pygears-tools to a &lt;a class="reference external" href="https://github.com/bogdanvuk/pygears-tools"&gt;separate repository&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add &lt;a class="reference external" href="https://www.vagrantup.com/"&gt;Vagrant&lt;/a&gt; scripts for testing different PyGears installation methods on different supported OSs&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="bug-fixes"&gt;
&lt;h2&gt;Bug-fixes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Echo example can now be simulated completely in Python without an RTL simulator. Simulator is still in experimental stage, since not all gears from the libraries are supported.&lt;/p&gt;
&lt;p&gt;This mode can be invoked when running &lt;a class="reference external" href="https://docs.pygears.org/echo.html#running-simulation"&gt;plop_test_wav_echo_sim&lt;/a&gt; by setting &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;cosim=False&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight-default notranslate"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;wav_echo_sim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;plop.wav&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;build&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;plop_echo.wav&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;feedback_gain&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;cosim&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;stereo&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fix &lt;a class="reference external" href="https://github.com/bogdanvuk/pygears/blob/master/pygears/lib/rng.py"&gt;rng&lt;/a&gt; for irregular cases where the counting range is not divisible by the step.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fix ‘*’ and ‘+’ operations for Integer types&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://docs.pygears.org/release/v0.1.1.html" rel="alternate"/>
    <summary>Add less-then ‘&lt;’ operator</summary>
    <published>2018-10-07T00:00:00+02:00</published>
  </entry>
  <entry>
    <id>https://docs.pygears.org/release/v0.1.2.html</id>
    <title>PyGears 0.1.2 released</title>
    <updated>2018-10-28T00:00:00+02:00</updated>
    <author>
      <name>Bogdan Vukobratović</name>
    </author>
    <content type="html">&lt;section id="pygears-0-1-2-released"&gt;

&lt;section id="features"&gt;
&lt;h2&gt;Features&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Add support for user configuration &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;.pygears.py&lt;/span&gt;&lt;/code&gt; files that are loaded at startup. These files can be local to the project or located in &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;~/.pygears.py&lt;/span&gt;&lt;/code&gt; and active globally.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Registry paths can be accessed by Unix path strings (e.g. &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;logger/svgen/print_traceback&lt;/span&gt;&lt;/code&gt;), take a look at &lt;span class="xref std std-ref"&gt;registry&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Wildcards can be used in registry paths, e.g. &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;logger/*/print_traceback&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add support for user configuration files in JSON and YAML formats&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Loggers are organized better and are configured more easily. Checkout docs for &lt;span class="xref std std-ref"&gt;Logger&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Added generation of Questa run script in SystemVerilog generation subsystem&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Added Python implementation for the following gears from the gear library: &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;accumulator&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;clip&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;iceil&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;max_gears&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;qlen_cnt&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;reverse&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;take&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;tr_cnt&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;unary&lt;/span&gt;&lt;/code&gt; and &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;valve&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;width_reductor&lt;/span&gt;&lt;/code&gt; is now version of &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;serialize&lt;/span&gt;&lt;/code&gt; gear when active field is supplied&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Gears can now be scheduled multiple times within forward/backward phases, which handles the problems with fictive cycles in simulation graph when multiple gears are combined to be simulated in external RTL simulator.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Output interfaces are now named after the returned variable names in hierarchical gears&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="infrastructure"&gt;
&lt;h2&gt;Infrastructure&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Move infrastructure modules to &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;conf&lt;/span&gt;&lt;/code&gt; subpackage.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Allow for modules to specify callbacks to be triggered when their configuration is changed in registry&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Module &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;err.py&lt;/span&gt;&lt;/code&gt; has been removed and its functionality has been moved to &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;trace.py&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="bug-fixes"&gt;
&lt;h2&gt;Bug-fixes&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Fix __str__ for generic Queue and Array.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Correct unpatch-ing of PDB when &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;trace/level&lt;/span&gt;&lt;/code&gt; is set from &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;TraceLevel.user&lt;/span&gt;&lt;/code&gt; to &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;TraceLevel.debug&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fix clashing between class and instance methods &lt;code class="xref py py-meth docutils literal notranslate"&gt;&lt;span class="pre"&gt;Tuple.replace&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Turn-off pretty sieve naming by default since it creates performance issues for large designs&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Make importing of &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;yaml&lt;/span&gt;&lt;/code&gt; package optional, since the package doesn’t come with Python and needs to be installed separately.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section id="documentation"&gt;
&lt;h2&gt;Documentation&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Document PyGears &lt;span class="xref std std-ref"&gt;registry&lt;/span&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="xref any docutils literal notranslate"&gt;&lt;span class="pre"&gt;typing/tuple&lt;/span&gt;&lt;/code&gt; documented.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Separate pages and additional documentation for &lt;code class="xref any docutils literal notranslate"&gt;&lt;span class="pre"&gt;typing/integer&lt;/span&gt;&lt;/code&gt;, &lt;code class="xref any docutils literal notranslate"&gt;&lt;span class="pre"&gt;typing/uint&lt;/span&gt;&lt;/code&gt; and &lt;code class="xref any docutils literal notranslate"&gt;&lt;span class="pre"&gt;typing/int&lt;/span&gt;&lt;/code&gt; types.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Document &lt;code class="xref py py-func docutils literal notranslate"&gt;&lt;span class="pre"&gt;drv&lt;/span&gt;&lt;/code&gt; gear.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;/section&gt;
</content>
    <link href="https://docs.pygears.org/release/v0.1.2.html" rel="alternate"/>
    <summary>Add support for user configuration .pygears.py files that are loaded at startup. These files can be local to the project or located in ~/.pygears.py and active globally.</summary>
    <published>2018-10-28T00:00:00+02:00</published>
  </entry>
</feed>
